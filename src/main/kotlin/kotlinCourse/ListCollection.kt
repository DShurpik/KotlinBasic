package kotlinCourse
/** List<T> хранит элементы в определённом порядке и обеспечивает к ним доступ по индексу.*/
fun main() {
    val firstList: List<String> = listOf(
        /** создается неизменяемый Immutable List (неизменяемый список) — элементы не
         * могут быть изменены после создания.*/
        "First",
        "Second",
        "Third"
    )

    val firstToMutableList = firstList.toMutableList() // создаем на основании firstList НОВЫЙ Mutable List

    val secondList: List<String> = mutableListOf(
        /** создается изменяемый Mutable List (изменяемый список) — позволяет изменять содержимое списка.*/
        "First",
        "Second",
        "Third"
    )

    val emptyList: List<String> = emptyList()
    /** emptyList в Kotlin — это функция, которая создаёт пустой неизменяемый список. Этот метод
     * полезен, когда явно указать, что список будет пустым, и не хотите добавлять в него элементы.*/

    /** Основные методы List
    Метод	                Описание
    size	                Возвращает количество элементов в списке.
    add(VALUE)              Добавляет значение в конец листа
    add(index, value)       Добавляет значение в заданный индекс
    addAll(listof(9,10,11)) Добавляет пул значений в конец
    remove(ELEMENT)         Удалить значение
    removeAt(INDEX)         Удаление по индексу
    contains(VALUE)         Проверка что есть такое значение
    indexOf(VALUE)          Возвращает индекс искомого значения
    subList()               Cоздания подсписка (части) из существующего списка.
    indices                 Для получения диапазона индексов элементов в списке IntRange, представляющий диапазон от 0 до size - 1.
    intersect               Для нахождения общих элементов двух коллекций. Возвращает новую коллекцию, содержащую только те элементы, которые присутствуют в обеих коллекциях.
    union                   Для объединения двух коллекций, создавая новую коллекцию, содержащую все уникальные элементы из обеих коллекций.
    isEmpty()	            Проверяет, пустой ли список.
    contains(element)	    Проверяет, содержит ли список указанный элемент.
    indexOf(element)	    Возвращает индекс первого вхождения элемента (или -1, если элемента нет).
    lastIndexOf(element)	Возвращает индекс последнего вхождения элемента.
    subList(from, to)	    Возвращает подсписок между индексами from (включительно) и to (исключительно). */

    /** Высокоуровневые функции для работы с List
    Kotlin предоставляет множество функций для удобной работы с коллекциями.
    val numbers = listOf(1, 2, 3, 4, 5)
    Примеры:
    map:            Преобразует элементы списка.                numbers.map { it * 2 }          [2, 4, 6, 8, 10]
    filter:         Фильтрует элементы по условию.              numbers.filter { it % 2 == 0 }   [2, 4]
    forEach:        Выполняет действие для каждого элемента.
    sorted:         Сортирует элементы.                         numbers.sortedDescending()      [5, 4, 3, 2, 1]
    reduce и fold:  Сокращают коллекцию до одного значения.*/

}